@use '../../styles/vars.scss' as vars;

.container {
  display: grid;
  grid-template-areas:
    'text peekers'
    'text display';
  grid-template-columns: auto 1fr;
  align-items: flex-start;
  padding: 0 vars.$side-padding;
  margin: 8rem calc(vars.$side-padding * -1);
  overflow: hidden;
  margin-bottom: -35rem;

  @media screen and (max-width: vars.$breakpoint-md) {
    padding: 0 vars.$side-padding-mobile;
    margin: 6rem calc(vars.$side-padding-mobile * -1);
  }

  .text {
    grid-area: text;
    max-height: min(60rem, 100vh);
    margin-top: 10rem;
  }

  @media screen and (max-width: vars.$breakpoint-lg) {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4rem;
    margin-bottom: -30rem;

    .text {
      max-height: unset;
      margin-top: 0;
    }
  }

  .imageWrapper {
    justify-self: center;
    width: 100%;

    .image {
      pointer-events: none;
    }
  }

  .peekersWrapper {
    $peekersImageWidth: 916;
    $peekHoleWidth: 571;
    $peekHoleHeight: 155;

    grid-area: peekers;
    max-width: calc($peekHoleWidth * 1px);
    aspect-ratio: $peekHoleWidth / $peekHoleHeight;
    margin-bottom: 5rem;
    position: relative;

    .peekers {
      position: absolute;
      top: 0;
      left: -30rem;
      right: -30rem;
      margin: 0 auto;
      width: calc($peekersImageWidth / $peekHoleWidth * 100%);
    }
  }

  .displayWrapper {
    $displayImageWidth: 788;
    $pillarWidth: 430;

    grid-area: display;
    max-width: calc($pillarWidth * 1px);
    display: flex;
    justify-content: center;

    .display {
      flex: none;
      width: calc($displayImageWidth / $pillarWidth * 100%);
      margin-top: -60%;
    }
  }
}
